{"expireTime":9007200864383286000,"key":"gatsby-plugin-mdx-entire-payload-df12f93b63b674c548f8f8aee99dd915-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/alecjo/Desktop/elv-live-web/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":113,"offset":114},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":116},"end":{"line":5,"column":29,"offset":144},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Overview","position":{"start":{"line":8,"column":3,"offset":149},"end":{"line":8,"column":11,"offset":157},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":147},"end":{"line":8,"column":11,"offset":157},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Documentation of the structure and components for Eluvio Live: a ticketing and streaming platform for live events.","position":{"start":{"line":10,"column":1,"offset":159},"end":{"line":10,"column":115,"offset":273},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":159},"end":{"line":10,"column":115,"offset":273},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Quick start","position":{"start":{"line":12,"column":4,"offset":278},"end":{"line":12,"column":15,"offset":289},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":275},"end":{"line":12,"column":15,"offset":289},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Clone repository.","position":{"start":{"line":14,"column":7,"offset":297},"end":{"line":14,"column":24,"offset":314},"indent":[]}}],"position":{"start":{"line":14,"column":5,"offset":295},"end":{"line":14,"column":26,"offset":316},"indent":[]}}],"position":{"start":{"line":14,"column":5,"offset":295},"end":{"line":14,"column":26,"offset":316},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"After cloning the repository, navigate into the project's directory to install the necessary npm packages.","position":{"start":{"line":16,"column":5,"offset":322},"end":{"line":16,"column":111,"offset":428},"indent":[]}}],"position":{"start":{"line":16,"column":5,"offset":322},"end":{"line":16,"column":111,"offset":428},"indent":[]}},{"type":"code","lang":"sh","meta":null,"value":"  git clone https://github.com/eluv-io/elv-live-web.git\n\ncd elv-live-web\nnpm install  ","position":{"start":{"line":18,"column":5,"offset":434},"end":{"line":23,"column":8,"offset":550},"indent":[5,5,5,5,5]}}],"position":{"start":{"line":14,"column":1,"offset":291},"end":{"line":24,"column":1,"offset":551},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Start developing.","position":{"start":{"line":25,"column":7,"offset":558},"end":{"line":25,"column":24,"offset":575},"indent":[]}}],"position":{"start":{"line":25,"column":5,"offset":556},"end":{"line":25,"column":26,"offset":577},"indent":[]}}],"position":{"start":{"line":25,"column":5,"offset":556},"end":{"line":25,"column":26,"offset":577},"indent":[]}},{"type":"code","lang":"sh","meta":null,"value":"  npm run serve","position":{"start":{"line":27,"column":5,"offset":583},"end":{"line":29,"column":8,"offset":616},"indent":[5,5]}},{"type":"paragraph","children":[{"type":"text","value":"Your site is now running at ","position":{"start":{"line":31,"column":5,"offset":622},"end":{"line":31,"column":33,"offset":650},"indent":[]}},{"type":"inlineCode","value":"http://localhost:8086","position":{"start":{"line":31,"column":33,"offset":650},"end":{"line":31,"column":56,"offset":673},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":31,"column":56,"offset":673},"end":{"line":31,"column":57,"offset":674},"indent":[]}}],"position":{"start":{"line":31,"column":5,"offset":622},"end":{"line":31,"column":57,"offset":674},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"*Note: The main event page is ","position":{"start":{"line":33,"column":5,"offset":680},"end":{"line":33,"column":35,"offset":710},"indent":[]}},{"type":"inlineCode","value":"http://localhost:8086/d457a576/rita-ora","position":{"start":{"line":33,"column":35,"offset":710},"end":{"line":33,"column":76,"offset":751},"indent":[]}},{"type":"text","value":" as the baseurl is set to d457a576 before the launch. ","position":{"start":{"line":33,"column":76,"offset":751},"end":{"line":33,"column":130,"offset":805},"indent":[]}}],"position":{"start":{"line":33,"column":5,"offset":680},"end":{"line":33,"column":130,"offset":805},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":552},"end":{"line":33,"column":130,"offset":805},"indent":[1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":14,"column":1,"offset":291},"end":{"line":33,"column":130,"offset":805},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"<!-- \n\n## Directory Structure\n\nA quick look at the top-level files and directories you'll see in a Gatsby project.\n\n    .\n    ├── node_modules\n    ├── src\n    ├── docs\n    ├── mailgun\n    ├── LICENSE\n    ├── package-lock.json\n    ├── package.json\n    ├── README.md\n    ├── .eslintrc.json\n    ├── .webpack.config.js\n    ├── .gitignore\n    ├── .scss-lint.yml\n\n  1.  **`/node_modules`**: This directory contains all of the modules of code that your project depends on (npm packages) are automatically installed.  \n  \n  2.  **`/src`**: This directory will contain all of the code related to what you will see on the front-end of your site (what you see in the browser) such as your site header or a page template. `src` is a convention for “source code”.\n  \n  3.  **`.gitignore`**: This file tells git which files it should not track / not maintain a version history for.\n  \n  4.  **`.prettierrc`**: This is a configuration file for [Prettier](https://prettier.io/). Prettier is a tool to help keep the formatting of your code consistent.\n  \n  5.  **`gatsby-browser.js`**: This file is where Gatsby expects to find any usage of the [Gatsby browser APIs](https://www.gatsbyjs.org/docs/browser-apis/) (if any). These allow customization/extension of default Gatsby settings affecting the browser.\n  \n  6.  **`gatsby-config.js`**: This is the main configuration file for a Gatsby site. This is where you can specify information about your site (metadata) like the site title and description, which Gatsby plugins you’d like to include, etc. (Check out the [config docs](https://www.gatsbyjs.org/docs/gatsby-config/) for more detail).\n  \n  7.  **`gatsby-node.js`**: This file is where Gatsby expects to find any usage of the [Gatsby Node APIs](https://www.gatsbyjs.org/docs/node-apis/) (if any). These allow customization/extension of default Gatsby settings affecting pieces of the site build process.\n  \n  8.  **`gatsby-ssr.js`**: This file is where Gatsby expects to find any usage of the [Gatsby server-side rendering APIs](https://www.gatsbyjs.org/docs/ssr-apis/) (if any). These allow customization of default Gatsby settings affecting server-side rendering.\n  \n  9.  **`LICENSE`**: Gatsby is licensed under the MIT license.\n  \n  10.  **`package-lock.json`** (See `package.json` below, first). This is an automatically generated file based on the exact versions of your npm dependencies that were installed for your project. **(You won’t change this file directly).**\n  \n  11.  **`package.json`**: A manifest file for Node.js projects, which includes things like metadata (the project’s name, author, etc). This manifest is how npm knows which packages to install for your project.\n  \n  12.  **`README.md`**: A text file containing useful reference information about your project.\n  \n  13.  **`yarn.lock`**: [Yarn](https://yarnpkg.com/) is a package manager alternative to npm. You can use either yarn or npm, though all of the Gatsby docs reference npm.  This file serves essentially the same purpose as `package-lock.json`, just for a different package management system. -->","position":{"start":{"line":35,"column":1,"offset":807},"end":{"line":79,"column":294,"offset":3882},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":82,"column":1,"offset":3885},"end":{"line":82,"column":31,"offset":3915},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":82,"column":31,"offset":3915}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/alecjo/Desktop/elv-live-web/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h1>\n    <p>{`Documentation of the structure and components for Eluvio Live: a ticketing and streaming platform for live events.`}</p>\n    <h2 {...{\n      \"id\": \"quick-start\"\n    }}>{`Quick start`}</h2>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Clone repository.`}</strong></p>\n        <p parentName=\"li\">{`After cloning the repository, navigate into the project's directory to install the necessary npm packages.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-sh\"\n          }}>{`  git clone https://github.com/eluv-io/elv-live-web.git\n\ncd elv-live-web\nnpm install  \n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Start developing.`}</strong></p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-sh\"\n          }}>{`  npm run serve\n`}</code></pre>\n        <p parentName=\"li\">{`Your site is now running at `}<inlineCode parentName=\"p\">{`http://localhost:8086`}</inlineCode>{`.`}</p>\n        <p parentName=\"li\">{`*Note: The main event page is `}<inlineCode parentName=\"p\">{`http://localhost:8086/d457a576/rita-ora`}</inlineCode>{` as the baseurl is set to d457a576 before the launch. `}</p>\n      </li>\n    </ol>\n    {\n      /* \n      ## Directory Structure\n      A quick look at the top-level files and directories you'll see in a Gatsby project.\n          .\n         ├── node_modules\n         ├── src\n         ├── docs\n         ├── mailgun\n         ├── LICENSE\n         ├── package-lock.json\n         ├── package.json\n         ├── README.md\n         ├── .eslintrc.json\n         ├── .webpack.config.js\n         ├── .gitignore\n         ├── .scss-lint.yml\n        1.  **`/node_modules`**: This directory contains all of the modules of code that your project depends on (npm packages) are automatically installed.  \n       \n       2.  **`/src`**: This directory will contain all of the code related to what you will see on the front-end of your site (what you see in the browser) such as your site header or a page template. `src` is a convention for “source code”.\n       \n       3.  **`.gitignore`**: This file tells git which files it should not track / not maintain a version history for.\n       \n       4.  **`.prettierrc`**: This is a configuration file for [Prettier](https://prettier.io/). Prettier is a tool to help keep the formatting of your code consistent.\n       \n       5.  **`gatsby-browser.js`**: This file is where Gatsby expects to find any usage of the [Gatsby browser APIs](https://www.gatsbyjs.org/docs/browser-apis/) (if any). These allow customization/extension of default Gatsby settings affecting the browser.\n       \n       6.  **`gatsby-config.js`**: This is the main configuration file for a Gatsby site. This is where you can specify information about your site (metadata) like the site title and description, which Gatsby plugins you’d like to include, etc. (Check out the [config docs](https://www.gatsbyjs.org/docs/gatsby-config/) for more detail).\n       \n       7.  **`gatsby-node.js`**: This file is where Gatsby expects to find any usage of the [Gatsby Node APIs](https://www.gatsbyjs.org/docs/node-apis/) (if any). These allow customization/extension of default Gatsby settings affecting pieces of the site build process.\n       \n       8.  **`gatsby-ssr.js`**: This file is where Gatsby expects to find any usage of the [Gatsby server-side rendering APIs](https://www.gatsbyjs.org/docs/ssr-apis/) (if any). These allow customization of default Gatsby settings affecting server-side rendering.\n       \n       9.  **`LICENSE`**: Gatsby is licensed under the MIT license.\n       \n       10.  **`package-lock.json`** (See `package.json` below, first). This is an automatically generated file based on the exact versions of your npm dependencies that were installed for your project. **(You won’t change this file directly).**\n       \n       11.  **`package.json`**: A manifest file for Node.js projects, which includes things like metadata (the project’s name, author, etc). This manifest is how npm knows which packages to install for your project.\n       \n       12.  **`README.md`**: A text file containing useful reference information about your project.\n       \n       13.  **`yarn.lock`**: [Yarn](https://yarnpkg.com/) is a package manager alternative to npm. You can use either yarn or npm, though all of the Gatsby docs reference npm.  This file serves essentially the same purpose as `package-lock.json`, just for a different package management system. */\n    }\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}